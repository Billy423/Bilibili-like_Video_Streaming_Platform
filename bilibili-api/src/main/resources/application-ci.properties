# CI/CD Test Configuration
# This configuration is used for GitHub Actions CI/CD pipeline
# It uses in-memory databases and mocks external services

# Server configuration
server.port=8080

# Database configuration (H2 in-memory for CI)
spring.datasource.url=jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=create-drop

# H2 Console (for debugging in CI)
spring.h2.console.enabled=true

# Redis configuration (mock for CI)
spring.data.redis.host=localhost
spring.data.redis.port=6379
spring.data.redis.timeout=2000ms
spring.data.redis.jedis.pool.max-active=8
spring.data.redis.jedis.pool.max-wait=-1ms
spring.data.redis.jedis.pool.max-idle=8
spring.data.redis.jedis.pool.min-idle=0

# Elasticsearch configuration (mock for CI)
elasticsearch.url=http://localhost:9200

# RocketMQ configuration (mock for CI)
rocketmq.name-server=localhost:9876

# Logging configuration
logging.level.com.example.bilibili=INFO
logging.level.org.springframework=WARN
logging.level.org.apache.ibatis=WARN

# Disable external service integrations for CI
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=when-authorized
